{"version":3,"sources":["components/header/header.js","components/map/map.js","components/weather/weather-header.js","components/weather/weather.js","components/yelp/yelp-header.js","components/yelp/yelp.js","components/meetup/meetup-header.js","components/meetup/meetup.js","components/movies/movies-header.js","components/movies/movies.js","components/trails/trails-header.js","components/trails/trails.js","components/form/form.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","Map","props","className","id","src","location","latitude","longitude","alt","formatted_query","WeatherHeader","Weather","weather","map","forecast","idx","key","concat","time","YelpHeader","Yelp","MeetupHeader","Meetup","MoviesHeader","Movies","TrailsHeader","Trails","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","data","wrap","_context","prev","next","preventDefault","superagent","get","target","inputsearch","value","sent","setState","body","console","log","state","query","mapClassName","stop","_x","apply","arguments","handleChange","event","_event$target","name","defineProperty","divClassName","form_FormScaff","weather_header","weather_weather","yelp_header","yelp","meetup_header","meetup","movies_header","movies","trails_header","trails","React","Component","FormScaff","onSubmit","for","type","placeholder","App","header","form_form","prompt","handler","handleLocation","updateLocation","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.006c75f7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>City Explorer!</h1>\r\n        <p>Enter a location below to learn about the weather, events, restaurants, movies, filmed there, and more!</p>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Map = (props) => {\r\n  return (\r\n    <div className={props.className} id=\"map-container\">\r\n      <img id=\"map\" src={\"https://maps.googleapis.com/maps/api/staticmap?center=\"+props.location.latitude+\"%2c%20\"+ props.location.longitude +\"&zoom=13&size=600x300&maptype=roadmap&key=AIzaSyDp0Caae9rkHUHwERAFzs6WN4_MuphTimk\"} alt=\"Map of search query\" />\r\n      <h2 className=\"query-placeholder\">Here are the results for {props.location.formatted_query}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nconst WeatherHeader = () => {\r\n  return (<h3>Results from the Dark Sky API</h3>)\r\n}\r\n\r\nexport default WeatherHeader;","import React from \"react\";\r\n\r\nconst Weather = props => {\r\n  return (\r\n    <ul>\r\n      {props.weather.map((forecast, idx) => (\r\n        <li key={`weather-${idx}`}>The forecast for {forecast.time} is: {forecast.forecast}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nconst YelpHeader = () => {\r\n  return (<h3>Results from the Yelp API</h3>)\r\n}\r\n\r\nexport default YelpHeader;","import React from \"react\";\r\nimport superagent from 'superagent';\r\n\r\nconst Yelp = props => {\r\n  return (\r\n    <ul>\r\n      <li>Hello Yelp!</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nexport default Yelp;","import React from \"react\";\r\n\r\nconst MeetupHeader = () => {\r\n  return (<h3>Results from the Meetup API</h3>)\r\n}\r\n\r\nexport default MeetupHeader;","import React from \"react\";\r\nimport superagent from 'superagent';\r\n\r\nconst Meetup = props => {\r\n  return (\r\n    <ul>\r\n      <li>Hello Meetup!</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nexport default Meetup;","import React from \"react\";\r\n\r\nconst MoviesHeader = () => {\r\n  return (<h3>Results from the Movie DB API</h3>)\r\n}\r\n\r\nexport default MoviesHeader;","import React from \"react\";\r\nimport superagent from 'superagent';\r\n\r\nconst Movies = props => {\r\n  return (\r\n    <ul>\r\n      <li>Hello Movies!</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nexport default Movies;","import React from \"react\";\r\n\r\nconst TrailsHeader = () => {\r\n  return (<h3>Results from the Hiking Project API</h3>)\r\n}\r\n\r\nexport default TrailsHeader;","import React from \"react\";\r\nimport superagent from 'superagent';\r\n\r\nconst Trails = props => {\r\n  return (\r\n    <ul>\r\n      <li>Hello Trails!</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\nexport default Trails;","import React from 'react';\r\nimport superagent from 'superagent';\r\nimport Map from \"./../map/map\";\r\nimport WeatherHeader from \"./../weather/weather-header\";\r\nimport Weather from \"./../weather/weather\";\r\nimport YelpHeader from \"./../yelp/yelp-header\";\r\nimport Yelp from \"./../yelp/yelp\";\r\nimport MeetupHeader from \"./../meetup/meetup-header\";\r\nimport Meetup from \"./../meetup/meetup\";\r\nimport MoviesHeader from \"./../movies/movies-header\";\r\nimport Movies from \"./../movies/movies\";\r\nimport TrailsHeader from \"./../trails/trails-header\";\r\nimport Trails from \"./../trails/trails\";\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mapClassName: 'hide',\r\n      divClassName: 'column-container hide',\r\n      location: {},\r\n      weather: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = await superagent.get(`https://city-explorer-backend.herokuapp.com/location?data=${e.target.inputsearch.value}`)\r\n    this.setState({ location: data.body });\r\n    \r\n    console.log(`Query: ${this.state.location.formatted_query}, Lat: ${this.state.location.latitude}, Long: ${this.state.location.longitude}`);\r\n    \r\n    let weather = await superagent.get(\"https://city-explorer-backend.herokuapp.com/weather\")\r\n      .query({data: this.state.location})\r\n    this.setState({weather: weather.body});\r\n\r\n    this.setState({mapClassName: ''});\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main>\r\n        <FormScaff handleSubmit={this.handleSubmit} />\r\n          <Map location={this.state.location} className={this.state.mapClassName}/>\r\n          <div className={this.state.divClassName}>\r\n            <section>\r\n              <WeatherHeader />\r\n              <Weather weather={this.state.weather} />\r\n            </section>\r\n            <section>\r\n              <YelpHeader />\r\n              <Yelp />\r\n            </section>\r\n            <section>\r\n              <MeetupHeader />\r\n              <Meetup />\r\n            </section>\r\n            <section>\r\n              <MoviesHeader />\r\n              <Movies />\r\n            </section>\r\n            <section>  \r\n              <TrailsHeader />\r\n              <Trails />\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst FormScaff = props => {\r\n  return (\r\n    <form id=\"search-form\" onSubmit={props.handleSubmit}>\r\n      <label for=\"search\">Search for a location</label>\r\n      <input type=\"text\" name=\"search\" id=\"inputsearch\" placeholder=\"Enter a location here\" />\r\n      <button type=\"submit\">Explore!</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from 'react';\nimport Header from \"./components/header/header.js\";\nimport Form from \"./components/form/form.js\";\nimport './design/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <main>\n          <Form prompt=\"Update Location\" handler={this.handleLocation} updateLocation={this.updateLocation} />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './design/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}